apiVersion: v1
kind: Service
metadata:
  name: go-mod-image
  labels:
    app: go-mod-image
spec:
  clusterIP: None
  selector:
    app: go-mod-image
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-mod-image
  labels:
    app: go-mod-image
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-mod-image
  template:
    metadata:
      labels:
        app: go-mod-image
    spec:
      containers:
      - name: go-mod-image
        image: go-mod-image
        env:
        - name: VERSION
          value: staging
# removed as asked by willisc@
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: info-getter
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["redis.cnrm.cloud.google.com"]
    resources: ["redisinstances"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: get-info
  namespace: default
subjects:
  # You can specify more than one "subject"
  - kind: ServiceAccount
    name: default # "name" is case sensitive
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: info-getter # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: redis.cnrm.cloud.google.com/v1beta1
kind: RedisInstance
metadata:
  name: redis-staging
spec:
  displayName: Redis Instance
  region: us-central1
  authorizedNetworkRef:
    name: default
  tier: BASIC
  memorySizeGb: 16
  connectMode: PRIVATE_SERVICE_ACCESS
